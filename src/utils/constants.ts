// Purpose: Constants used in the project.

const API_VERSION = "v1";
const API_BASE_URL = `/api/${API_VERSION}`;
const API_URLS = {
  AUTH: "auth",
  USER: "user",
  NFT: "nft",
  MISC: "misc",
};

const HttpResponseCode = {
  SUCCESS: 200,
  CREATED: 201,
  BAD_REQUEST: 400,
  UNAUTHORIZED: 401,
  FORBIDDEN: 403,
  NOT_FOUND: 404,
  INTERNAL_SERVER_ERROR: 500,
};

// TODO: There might be  a better way to do this. Discuss this.

enum CapiErrorCode {
  // Use the following code when you want to send a generic error message. For eg db inseriton failed, etc.
  CAPI_OPERATION_FAILED = "CAPI_OPERATION_FAILED",

  CAPI_INVALID_INPUT = "CAPI_INVALID_INPUT",
  CAPI_USER_EXISTS = "CAPI_USER_EXISTS",
  CAPI_USER_NOT_FOUND = "CAPI_USER_NOT_FOUND",
  CAPI_API_KEY_INVALID = "CAPI_API_KEY_INVALID",
  CAPI_API_KEY_EXPIRED = "CAPI_API_KEY_EXPIRED",
  CAPI_API_KEY_BLOCKED = "CAPI_API_KEY_BLOCKED",
  CAPI_USER_BLOCKED = "CAPI_USER_BLOCKED",

  CAPI_WALLET_NOT_SET = "CAPI_WALLET_NOT_SET",
  CAPI_WALLET_NOT_FOUND = "CAPI_WALLET_NOT_FOUND",

  CAPI_TRANSACTION_FAILED = "CAPI_TRANSACTION_FAILED",
  CAPI_TRANSACTION_INVALID = "CAPI_TRANSACTION_INVALID",
  CAPI_TRANSACTION_EXPIRED = "CAPI_TRANSACTION_EXPIRED",
  CAPI_TRANSACTION_NOT_FOUND = "CAPI_TRANSACTION_NOT_FOUND",
  CAPI_TRANSACTION_ALREADY_PROCESSED = "CAPI_TRANSACTION_ALREADY_PROCESSED",
}

enum CapiStatusCode {
  // Use the following code when you want to send a generic success message. For eg db inseriton, rsa keys genenrated etc.
  CAPI_OPERATION_SUCCESSFUL = "CAPI_OPERATION_SUCCESSFUL",

  CAPI_USER_CREATED = "CAPI_USER_CREATED",
  CAPI_USER_UPDATED = "CAPI_USER_UPDATED",
  CAPI_USER_DELETED = "CAPI_USER_DELETED",
  CAPI_USER_BLOCKED = "CAPI_USER_BLOCKED",
  CAPI_USER_ACTIVE = "CAPI_USER_ACTIVE",
  CAPI_USER_INACTIVE = "CAPI_USER_INACTIVE",
  CAPI_USER_WALLET_CREATED = "CAPI_USER_WALLET_CREATED",
  CAPI_USER_DISABLED = "CAPI_USER_DISABLED",
  CAPI_USER_PENDING_ACTIONS = "CAPI_USER_PENDING_ACTIONS",
  CAPI_USER_VERIFIED = "CAPI_USER_VERIFIED",
  CAPI_USER_FOUND = "CAPI_USER_FOUND",
  CAPI_USER_EXISTS = "CAPI_USER_EXISTS",
  CAPI_USER_NOT_FOUND = "CAPI_USER_NOT_FOUND",

  CAPI_WALLET_SET = "CAPI_WALLET_SET",
  CAPI_WALLET_FOUND = "CAPI_WALLET_FOUND",

  CAPI_TRANSACTION_INITIATED = "CAPI_TRANSACTION_INITIATED",
  CAPI_TRANSACTION_PROCESSING = "CAPI_TRANSACTION_PROCESSING",
  CAPI_TRANSACTION_SENT_TO_CHAIN = "CAPI_TRANSACTION_SENT_TO_CHAIN",
  CAPI_TRANSACTION_SUCCESSFUL = "CAPI_TRANSACTION_SUCCESSFUL",
  CAPI_TRANSACTION_CANCELLED = "CAPI_TRANSACTION_CANCELLED",
  CAPI_TRANSACTION_EXPIRED = "CAPI_TRANSACTION_EXPIRED",
}

export {
  API_URLS,
  API_BASE_URL,
  HttpResponseCode,
  CapiErrorCode,
  CapiStatusCode,
};
